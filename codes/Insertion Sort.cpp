#include <iostream> // библиотека для ввода-вывода (cin, cout)
using namespace std;

// Функция сортировки вставками
void insertionSort(int arr[], int n) {
    // Внешний цикл проходит по всем элементам начиная со второго (i = 1)
    // Первый элемент (i = 0) считается уже "отсортированным"
    for (int i = 1; i < n; i++) {
        int key = arr[i]; // сохраняем текущий элемент, который нужно вставить в отсортированную часть
        int j = i - 1;    // индекс последнего элемента в отсортированной части массива

        // Пока j не вышел за пределы массива (j >= 0)
        // и пока элемент arr[j] больше "ключа", сдвигаем его вправо
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j]; // сдвигаем элемент на одну позицию вправо
            j--; // переходим к предыдущему элементу
        }

        // Когда нашли правильное место (либо j == -1, либо arr[j] <= key),
        // вставляем ключ на позицию j+1
        arr[j + 1] = key;
    }
}

// Функция вывода массива
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

// Главная функция программы
int main() {
    int n;

    cout << "Введите количество элементов массива: ";
    cin >> n; // считываем размер массива

    int arr[n]; // создаем массив размером n (допускается во многих компиляторах)

    cout << "Введите " << n << " элементов массива:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i]; // вводим элементы массива
    }

    cout << "\nМассив до сортировки: ";
    printArray(arr, n); // выводим исходный массив

    insertionSort(arr, n); // вызываем функцию сортировки

    cout << "Массив после сортировки: ";
    printArray(arr, n); // выводим отсортированный массив

    return 0; // успешное завершение программы
}
