#include <iostream> // подключаем библиотеку для ввода-вывода (cout, cin)
using namespace std;

// Функция для сортировки массива методом выбора
void selectionSort(int arr[], int n) {
    // Внешний цикл — отвечает за позицию, на которую мы ставим очередной минимальный элемент
    for (int i = 0; i < n - 1; i++) {
        int minIndex = i; // предполагаем, что текущий элемент — минимальный

        // Внутренний цикл — ищет минимальный элемент в оставшейся (неотсортированной) части массива
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j; // нашли элемент меньше текущего минимума — запоминаем его индекс
            }
        }

        // После завершения внутреннего цикла minIndex указывает на индекс минимального элемента.
        // Если он отличается от текущего (i), то меняем их местами.
        if (minIndex != i) {
            int temp = arr[i];      // сохраняем значение текущего элемента
            arr[i] = arr[minIndex]; // ставим на его место найденный минимум
            arr[minIndex] = temp;   // ставим на место минимума старое значение arr[i]
        }
    }
}

// Вспомогательная функция для вывода массива на экран
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " "; // выводим элементы через пробел
    }
    cout << endl; // переход на новую строку
}

// Главная функция программы
int main() {
    int n;

    cout << "Введите количество элементов массива: ";
    cin >> n; // считываем размер массива

    int arr[n]; // создаем массив размером n

    cout << "Введите " << n << " элементов массива:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i]; // вводим элементы массива
    }

    cout << "\nМассив до сортировки: ";
    printArray(arr, n); // выводим исходный массив

    selectionSort(arr, n); // вызываем функцию сортировки

    cout << "Массив после сортировки: ";
    printArray(arr, n); // выводим отсортированный массив

    return 0; // успешное завершение программы
}

