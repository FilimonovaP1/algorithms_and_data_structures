# Функция сортировки Шелла
def shell_sort(arr):
    """
    Сортировка Шелла — это улучшенная версия сортировки вставками.
    Она сначала сравнивает элементы, находящиеся на определённом "шаге" (gap) друг от друга,
    постепенно уменьшая этот шаг, пока не дойдёт до 1 (обычной сортировки вставками).
    """

    n = len(arr)  # узнаем длину массива

    # Начальный шаг — примерно половина массива
    gap = n // 2

    # Продолжаем, пока gap не станет равен 0
    while gap > 0:
        # Начинаем сортировку вставками, но с шагом "gap"
        for i in range(gap, n):
            # Сохраняем текущий элемент, который будем вставлять в правильное место
            temp = arr[i]
            j = i

            # Сдвигаем элементы, которые больше temp, на позицию вправо (на расстояние gap)
            while j >= gap and arr[j - gap] > temp:
                arr[j] = arr[j - gap]
                j -= gap  # переходим на gap позиций влево

            # Вставляем temp на найденное место
            arr[j] = temp

        # Уменьшаем шаг (gap) в 2 раза
        gap //= 2


# Функция для красивого вывода массива
def print_array(arr):
    for num in arr:
        print(num, end=" ")
    print()


# Основная часть программы
if __name__ == "__main__":
    # Пользователь вводит размер массива
    n = int(input("Введите количество элементов массива: "))

    # Создаем пустой список
    arr = []

    # Вводим элементы
    print(f"Введите {n} элементов массива:")
    for i in range(n):
        value = int(input(f"Элемент {i + 1}: "))
        arr.append(value)

    # Выводим исходный массив
    print("\nМассив до сортировки:")
    print_array(arr)

    # Вызываем сортировку Шелла
    shell_sort(arr)

    # Выводим отсортированный массив
    print("Массив после сортировки:")
    print_array(arr)

